// Mocks generated by Mockito 5.4.2 from annotations
// in randomusers/test/test_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:randomusers/random/data/home/home_remote_data_source.dart'
    as _i2;
import 'package:randomusers/random/domain/entities/user_model.dart' as _i3;
import 'package:randomusers/random/domain/repositories/home_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHomeRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.HomeRemoteDataSource {
  _FakeHomeRemoteDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i4.HomeRepository {
  @override
  _i2.HomeRemoteDataSource get homeRemoteDataSource => (super.noSuchMethod(
        Invocation.getter(#homeRemoteDataSource),
        returnValue: _FakeHomeRemoteDataSource_0(
          this,
          Invocation.getter(#homeRemoteDataSource),
        ),
        returnValueForMissingStub: _FakeHomeRemoteDataSource_0(
          this,
          Invocation.getter(#homeRemoteDataSource),
        ),
      ) as _i2.HomeRemoteDataSource);

  @override
  _i5.Future<_i3.UserModel> getRandomUser() => (super.noSuchMethod(
        Invocation.method(
          #getRandomUser,
          [],
        ),
        returnValue: _i5.Future<_i3.UserModel>.value(_FakeUserModel_1(
          this,
          Invocation.method(
            #getRandomUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.UserModel>.value(_FakeUserModel_1(
          this,
          Invocation.method(
            #getRandomUser,
            [],
          ),
        )),
      ) as _i5.Future<_i3.UserModel>);
}
